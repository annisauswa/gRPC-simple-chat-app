# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nuser.proto\"B\n\x0bUserRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\"B\n\x0cUserResponse\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\"1\n\x0b\x41uthRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"?\n\x0c\x41uthResponse\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x32\x93\x01\n\x0bUserService\x12+\n\x0cRegisterUser\x12\x0c.UserRequest\x1a\r.UserResponse\x12/\n\x10\x41uthenticateUser\x12\x0c.AuthRequest\x1a\r.AuthResponse\x12&\n\x07GetUser\x12\x0c.UserRequest\x1a\r.UserResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'user_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_USERREQUEST']._serialized_start=14
  _globals['_USERREQUEST']._serialized_end=80
  _globals['_USERRESPONSE']._serialized_start=82
  _globals['_USERRESPONSE']._serialized_end=148
  _globals['_AUTHREQUEST']._serialized_start=150
  _globals['_AUTHREQUEST']._serialized_end=199
  _globals['_AUTHRESPONSE']._serialized_start=201
  _globals['_AUTHRESPONSE']._serialized_end=264
  _globals['_USERSERVICE']._serialized_start=267
  _globals['_USERSERVICE']._serialized_end=414
# @@protoc_insertion_point(module_scope)
